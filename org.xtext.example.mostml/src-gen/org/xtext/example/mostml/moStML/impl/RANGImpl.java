/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mostml.moStML.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mostml.moStML.ATTRIBUTEVALUE;
import org.xtext.example.mostml.moStML.COMPARISONOPERATOR;
import org.xtext.example.mostml.moStML.MoStMLPackage;
import org.xtext.example.mostml.moStML.RANG;
import org.xtext.example.mostml.moStML.UNIT;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>RANG</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.RANGImpl#getCompOperator1 <em>Comp Operator1</em>}</li>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.RANGImpl#getBound1 <em>Bound1</em>}</li>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.RANGImpl#getCompOperator2 <em>Comp Operator2</em>}</li>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.RANGImpl#getBound2 <em>Bound2</em>}</li>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.RANGImpl#getUnit <em>Unit</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RANGImpl extends MinimalEObjectImpl.Container implements RANG
{
  /**
   * The cached value of the '{@link #getCompOperator1() <em>Comp Operator1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompOperator1()
   * @generated
   * @ordered
   */
  protected COMPARISONOPERATOR compOperator1;

  /**
   * The cached value of the '{@link #getBound1() <em>Bound1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBound1()
   * @generated
   * @ordered
   */
  protected ATTRIBUTEVALUE bound1;

  /**
   * The cached value of the '{@link #getCompOperator2() <em>Comp Operator2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompOperator2()
   * @generated
   * @ordered
   */
  protected COMPARISONOPERATOR compOperator2;

  /**
   * The cached value of the '{@link #getBound2() <em>Bound2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBound2()
   * @generated
   * @ordered
   */
  protected ATTRIBUTEVALUE bound2;

  /**
   * The cached value of the '{@link #getUnit() <em>Unit</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected UNIT unit;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RANGImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MoStMLPackage.Literals.RANG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public COMPARISONOPERATOR getCompOperator1()
  {
    return compOperator1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCompOperator1(COMPARISONOPERATOR newCompOperator1, NotificationChain msgs)
  {
    COMPARISONOPERATOR oldCompOperator1 = compOperator1;
    compOperator1 = newCompOperator1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__COMP_OPERATOR1, oldCompOperator1, newCompOperator1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCompOperator1(COMPARISONOPERATOR newCompOperator1)
  {
    if (newCompOperator1 != compOperator1)
    {
      NotificationChain msgs = null;
      if (compOperator1 != null)
        msgs = ((InternalEObject)compOperator1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__COMP_OPERATOR1, null, msgs);
      if (newCompOperator1 != null)
        msgs = ((InternalEObject)newCompOperator1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__COMP_OPERATOR1, null, msgs);
      msgs = basicSetCompOperator1(newCompOperator1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__COMP_OPERATOR1, newCompOperator1, newCompOperator1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ATTRIBUTEVALUE getBound1()
  {
    return bound1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBound1(ATTRIBUTEVALUE newBound1, NotificationChain msgs)
  {
    ATTRIBUTEVALUE oldBound1 = bound1;
    bound1 = newBound1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__BOUND1, oldBound1, newBound1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBound1(ATTRIBUTEVALUE newBound1)
  {
    if (newBound1 != bound1)
    {
      NotificationChain msgs = null;
      if (bound1 != null)
        msgs = ((InternalEObject)bound1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__BOUND1, null, msgs);
      if (newBound1 != null)
        msgs = ((InternalEObject)newBound1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__BOUND1, null, msgs);
      msgs = basicSetBound1(newBound1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__BOUND1, newBound1, newBound1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public COMPARISONOPERATOR getCompOperator2()
  {
    return compOperator2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCompOperator2(COMPARISONOPERATOR newCompOperator2, NotificationChain msgs)
  {
    COMPARISONOPERATOR oldCompOperator2 = compOperator2;
    compOperator2 = newCompOperator2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__COMP_OPERATOR2, oldCompOperator2, newCompOperator2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCompOperator2(COMPARISONOPERATOR newCompOperator2)
  {
    if (newCompOperator2 != compOperator2)
    {
      NotificationChain msgs = null;
      if (compOperator2 != null)
        msgs = ((InternalEObject)compOperator2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__COMP_OPERATOR2, null, msgs);
      if (newCompOperator2 != null)
        msgs = ((InternalEObject)newCompOperator2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__COMP_OPERATOR2, null, msgs);
      msgs = basicSetCompOperator2(newCompOperator2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__COMP_OPERATOR2, newCompOperator2, newCompOperator2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ATTRIBUTEVALUE getBound2()
  {
    return bound2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBound2(ATTRIBUTEVALUE newBound2, NotificationChain msgs)
  {
    ATTRIBUTEVALUE oldBound2 = bound2;
    bound2 = newBound2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__BOUND2, oldBound2, newBound2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBound2(ATTRIBUTEVALUE newBound2)
  {
    if (newBound2 != bound2)
    {
      NotificationChain msgs = null;
      if (bound2 != null)
        msgs = ((InternalEObject)bound2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__BOUND2, null, msgs);
      if (newBound2 != null)
        msgs = ((InternalEObject)newBound2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__BOUND2, null, msgs);
      msgs = basicSetBound2(newBound2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__BOUND2, newBound2, newBound2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UNIT getUnit()
  {
    return unit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUnit(UNIT newUnit, NotificationChain msgs)
  {
    UNIT oldUnit = unit;
    unit = newUnit;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__UNIT, oldUnit, newUnit);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnit(UNIT newUnit)
  {
    if (newUnit != unit)
    {
      NotificationChain msgs = null;
      if (unit != null)
        msgs = ((InternalEObject)unit).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__UNIT, null, msgs);
      if (newUnit != null)
        msgs = ((InternalEObject)newUnit).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.RANG__UNIT, null, msgs);
      msgs = basicSetUnit(newUnit, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoStMLPackage.RANG__UNIT, newUnit, newUnit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MoStMLPackage.RANG__COMP_OPERATOR1:
        return basicSetCompOperator1(null, msgs);
      case MoStMLPackage.RANG__BOUND1:
        return basicSetBound1(null, msgs);
      case MoStMLPackage.RANG__COMP_OPERATOR2:
        return basicSetCompOperator2(null, msgs);
      case MoStMLPackage.RANG__BOUND2:
        return basicSetBound2(null, msgs);
      case MoStMLPackage.RANG__UNIT:
        return basicSetUnit(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MoStMLPackage.RANG__COMP_OPERATOR1:
        return getCompOperator1();
      case MoStMLPackage.RANG__BOUND1:
        return getBound1();
      case MoStMLPackage.RANG__COMP_OPERATOR2:
        return getCompOperator2();
      case MoStMLPackage.RANG__BOUND2:
        return getBound2();
      case MoStMLPackage.RANG__UNIT:
        return getUnit();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MoStMLPackage.RANG__COMP_OPERATOR1:
        setCompOperator1((COMPARISONOPERATOR)newValue);
        return;
      case MoStMLPackage.RANG__BOUND1:
        setBound1((ATTRIBUTEVALUE)newValue);
        return;
      case MoStMLPackage.RANG__COMP_OPERATOR2:
        setCompOperator2((COMPARISONOPERATOR)newValue);
        return;
      case MoStMLPackage.RANG__BOUND2:
        setBound2((ATTRIBUTEVALUE)newValue);
        return;
      case MoStMLPackage.RANG__UNIT:
        setUnit((UNIT)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MoStMLPackage.RANG__COMP_OPERATOR1:
        setCompOperator1((COMPARISONOPERATOR)null);
        return;
      case MoStMLPackage.RANG__BOUND1:
        setBound1((ATTRIBUTEVALUE)null);
        return;
      case MoStMLPackage.RANG__COMP_OPERATOR2:
        setCompOperator2((COMPARISONOPERATOR)null);
        return;
      case MoStMLPackage.RANG__BOUND2:
        setBound2((ATTRIBUTEVALUE)null);
        return;
      case MoStMLPackage.RANG__UNIT:
        setUnit((UNIT)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MoStMLPackage.RANG__COMP_OPERATOR1:
        return compOperator1 != null;
      case MoStMLPackage.RANG__BOUND1:
        return bound1 != null;
      case MoStMLPackage.RANG__COMP_OPERATOR2:
        return compOperator2 != null;
      case MoStMLPackage.RANG__BOUND2:
        return bound2 != null;
      case MoStMLPackage.RANG__UNIT:
        return unit != null;
    }
    return super.eIsSet(featureID);
  }

} //RANGImpl
