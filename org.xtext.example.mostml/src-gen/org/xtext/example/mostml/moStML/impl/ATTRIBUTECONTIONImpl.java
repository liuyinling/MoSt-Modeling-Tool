/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mostml.moStML.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mostml.moStML.ATTRIBUTECONTION;
import org.xtext.example.mostml.moStML.ATTRIBUTEVALUE;
import org.xtext.example.mostml.moStML.COMPARISONOPERATOR;
import org.xtext.example.mostml.moStML.MoStMLPackage;
import org.xtext.example.mostml.moStML.UNIT;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ATTRIBUTECONTION</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.ATTRIBUTECONTIONImpl#getAttributeName <em>Attribute Name</em>}</li>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.ATTRIBUTECONTIONImpl#getOperator <em>Operator</em>}</li>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.ATTRIBUTECONTIONImpl#getAttributeValue <em>Attribute Value</em>}</li>
 *   <li>{@link org.xtext.example.mostml.moStML.impl.ATTRIBUTECONTIONImpl#getUnit <em>Unit</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ATTRIBUTECONTIONImpl extends MinimalEObjectImpl.Container implements ATTRIBUTECONTION
{
  /**
   * The default value of the '{@link #getAttributeName() <em>Attribute Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeName()
   * @generated
   * @ordered
   */
  protected static final String ATTRIBUTE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAttributeName() <em>Attribute Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeName()
   * @generated
   * @ordered
   */
  protected String attributeName = ATTRIBUTE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getOperator() <em>Operator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperator()
   * @generated
   * @ordered
   */
  protected COMPARISONOPERATOR operator;

  /**
   * The cached value of the '{@link #getAttributeValue() <em>Attribute Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeValue()
   * @generated
   * @ordered
   */
  protected ATTRIBUTEVALUE attributeValue;

  /**
   * The cached value of the '{@link #getUnit() <em>Unit</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected EList<UNIT> unit;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ATTRIBUTECONTIONImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MoStMLPackage.Literals.ATTRIBUTECONTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAttributeName()
  {
    return attributeName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeName(String newAttributeName)
  {
    String oldAttributeName = attributeName;
    attributeName = newAttributeName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_NAME, oldAttributeName, attributeName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public COMPARISONOPERATOR getOperator()
  {
    return operator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOperator(COMPARISONOPERATOR newOperator, NotificationChain msgs)
  {
    COMPARISONOPERATOR oldOperator = operator;
    operator = newOperator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MoStMLPackage.ATTRIBUTECONTION__OPERATOR, oldOperator, newOperator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOperator(COMPARISONOPERATOR newOperator)
  {
    if (newOperator != operator)
    {
      NotificationChain msgs = null;
      if (operator != null)
        msgs = ((InternalEObject)operator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.ATTRIBUTECONTION__OPERATOR, null, msgs);
      if (newOperator != null)
        msgs = ((InternalEObject)newOperator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.ATTRIBUTECONTION__OPERATOR, null, msgs);
      msgs = basicSetOperator(newOperator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoStMLPackage.ATTRIBUTECONTION__OPERATOR, newOperator, newOperator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ATTRIBUTEVALUE getAttributeValue()
  {
    return attributeValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttributeValue(ATTRIBUTEVALUE newAttributeValue, NotificationChain msgs)
  {
    ATTRIBUTEVALUE oldAttributeValue = attributeValue;
    attributeValue = newAttributeValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE, oldAttributeValue, newAttributeValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeValue(ATTRIBUTEVALUE newAttributeValue)
  {
    if (newAttributeValue != attributeValue)
    {
      NotificationChain msgs = null;
      if (attributeValue != null)
        msgs = ((InternalEObject)attributeValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE, null, msgs);
      if (newAttributeValue != null)
        msgs = ((InternalEObject)newAttributeValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE, null, msgs);
      msgs = basicSetAttributeValue(newAttributeValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE, newAttributeValue, newAttributeValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<UNIT> getUnit()
  {
    if (unit == null)
    {
      unit = new EObjectContainmentEList<UNIT>(UNIT.class, this, MoStMLPackage.ATTRIBUTECONTION__UNIT);
    }
    return unit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MoStMLPackage.ATTRIBUTECONTION__OPERATOR:
        return basicSetOperator(null, msgs);
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE:
        return basicSetAttributeValue(null, msgs);
      case MoStMLPackage.ATTRIBUTECONTION__UNIT:
        return ((InternalEList<?>)getUnit()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_NAME:
        return getAttributeName();
      case MoStMLPackage.ATTRIBUTECONTION__OPERATOR:
        return getOperator();
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE:
        return getAttributeValue();
      case MoStMLPackage.ATTRIBUTECONTION__UNIT:
        return getUnit();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_NAME:
        setAttributeName((String)newValue);
        return;
      case MoStMLPackage.ATTRIBUTECONTION__OPERATOR:
        setOperator((COMPARISONOPERATOR)newValue);
        return;
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE:
        setAttributeValue((ATTRIBUTEVALUE)newValue);
        return;
      case MoStMLPackage.ATTRIBUTECONTION__UNIT:
        getUnit().clear();
        getUnit().addAll((Collection<? extends UNIT>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_NAME:
        setAttributeName(ATTRIBUTE_NAME_EDEFAULT);
        return;
      case MoStMLPackage.ATTRIBUTECONTION__OPERATOR:
        setOperator((COMPARISONOPERATOR)null);
        return;
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE:
        setAttributeValue((ATTRIBUTEVALUE)null);
        return;
      case MoStMLPackage.ATTRIBUTECONTION__UNIT:
        getUnit().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_NAME:
        return ATTRIBUTE_NAME_EDEFAULT == null ? attributeName != null : !ATTRIBUTE_NAME_EDEFAULT.equals(attributeName);
      case MoStMLPackage.ATTRIBUTECONTION__OPERATOR:
        return operator != null;
      case MoStMLPackage.ATTRIBUTECONTION__ATTRIBUTE_VALUE:
        return attributeValue != null;
      case MoStMLPackage.ATTRIBUTECONTION__UNIT:
        return unit != null && !unit.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (attributeName: ");
    result.append(attributeName);
    result.append(')');
    return result.toString();
  }

} //ATTRIBUTECONTIONImpl
