/*
 * generated by Xtext 2.27.0
 */
grammar InternalMoStML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mostml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mostml.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mostml.services.MoStMLGrammarAccess;

}

@parser::members {

 	private MoStMLGrammarAccess grammarAccess;

    public InternalMoStMLParser(TokenStream input, MoStMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MoSt";
   	}

   	@Override
   	protected MoStMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMoSt
entryRuleMoSt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoStRule()); }
	iv_ruleMoSt=ruleMoSt
	{ $current=$iv_ruleMoSt.current; }
	EOF;

// Rule MoSt
ruleMoSt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMoStAccess().getModelRequirementParserRuleCall_0_0());
				}
				lv_model_0_1=ruleRequirement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoStRule());
					}
					add(
						$current,
						"model",
						lv_model_0_1,
						"org.xtext.example.mostml.MoStML.Requirement");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getMoStAccess().getModelNLRequirementParserRuleCall_0_1());
				}
				lv_model_0_2=ruleNLRequirement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoStRule());
					}
					add(
						$current,
						"model",
						lv_model_0_2,
						"org.xtext.example.mostml.MoStML.NLRequirement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRuleNLRequirement
entryRuleNLRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNLRequirementRule()); }
	iv_ruleNLRequirement=ruleNLRequirement
	{ $current=$iv_ruleNLRequirement.current; }
	EOF;

// Rule NLRequirement
ruleNLRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNLRequirementAccess().getNlReqIDReqIDParserRuleCall_0_0());
				}
				lv_nlReqID_0_0=ruleReqID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNLRequirementRule());
					}
					set(
						$current,
						"nlReqID",
						lv_nlReqID_0_0,
						"org.xtext.example.mostml.MoStML.ReqID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_ID_1=RULE_ID
		{
			newLeafNode(this_ID_1, grammarAccess.getNLRequirementAccess().getIDTerminalRuleCall_1());
		}
		(
			this_ID_2=RULE_ID
			{
				newLeafNode(this_ID_2, grammarAccess.getNLRequirementAccess().getIDTerminalRuleCall_2());
			}
		)*
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getNLRequirementAccess().getFullStopKeyword_3());
		}
	)
;

// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	iv_ruleRequirement=ruleRequirement
	{ $current=$iv_ruleRequirement.current; }
	EOF;

// Rule Requirement
ruleRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRequirementAccess().getMODEParserRuleCall_0());
		}
		this_MODE_0=ruleMODE
		{
			$current = $this_MODE_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRequirementAccess().getSTATEParserRuleCall_1());
		}
		this_STATE_1=ruleSTATE
		{
			$current = $this_STATE_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRequirementAccess().getPROPERTYParserRuleCall_2());
		}
		this_PROPERTY_2=rulePROPERTY
		{
			$current = $this_PROPERTY_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRequirementAccess().getCONSTRAINTParserRuleCall_3());
		}
		this_CONSTRAINT_3=ruleCONSTRAINT
		{
			$current = $this_CONSTRAINT_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRequirementAccess().getEnvironmentParserRuleCall_4());
		}
		this_Environment_4=ruleEnvironment
		{
			$current = $this_Environment_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEnvironment
entryRuleEnvironment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnvironmentRule()); }
	iv_ruleEnvironment=ruleEnvironment
	{ $current=$iv_ruleEnvironment.current; }
	EOF;

// Rule Environment
ruleEnvironment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnvironmentAccess().getEnvirReqIDReqIDParserRuleCall_0_0());
				}
				lv_envirReqID_0_0=ruleReqID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnvironmentRule());
					}
					set(
						$current,
						"envirReqID",
						lv_envirReqID_0_0,
						"org.xtext.example.mostml.MoStML.ReqID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_ID_1=RULE_ID
		{
			newLeafNode(this_ID_1, grammarAccess.getEnvironmentAccess().getIDTerminalRuleCall_1());
		}
		(
			(
				lv_envirVariable_2_0=RULE_ID
				{
					newLeafNode(lv_envirVariable_2_0, grammarAccess.getEnvironmentAccess().getEnvirVariableIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnvironmentRule());
					}
					setWithLastConsumed(
						$current,
						"envirVariable",
						lv_envirVariable_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			this_ID_3=RULE_ID
			{
				newLeafNode(this_ID_3, grammarAccess.getEnvironmentAccess().getIDTerminalRuleCall_3());
			}
		)*
		(
			(
				otherlv_4='initialised'
				{
					newLeafNode(otherlv_4, grammarAccess.getEnvironmentAccess().getInitialisedKeyword_4_0_0());
				}
				otherlv_5='to'
				{
					newLeafNode(otherlv_5, grammarAccess.getEnvironmentAccess().getToKeyword_4_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEnvironmentAccess().getEnvirAttributeValueATTRIBUTEVALUEParserRuleCall_4_0_2_0());
						}
						lv_envirAttributeValue_6_0=ruleATTRIBUTEVALUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnvironmentRule());
							}
							set(
								$current,
								"envirAttributeValue",
								lv_envirAttributeValue_6_0,
								"org.xtext.example.mostml.MoStML.ATTRIBUTEVALUE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getEnvironmentAccess().getEnvirUnitUNITParserRuleCall_4_0_3_0());
						}
						lv_envirUnit_7_0=ruleUNIT
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnvironmentRule());
							}
							add(
								$current,
								"envirUnit",
								lv_envirUnit_7_0,
								"org.xtext.example.mostml.MoStML.UNIT");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getEnvironmentAccess().getRangeRANGParserRuleCall_4_1_0());
					}
					lv_range_8_0=ruleRANG
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnvironmentRule());
						}
						set(
							$current,
							"range",
							lv_range_8_0,
							"org.xtext.example.mostml.MoStML.RANG");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			this_ID_9=RULE_ID
			{
				newLeafNode(this_ID_9, grammarAccess.getEnvironmentAccess().getIDTerminalRuleCall_5());
			}
		)*
		otherlv_10='.'
		{
			newLeafNode(otherlv_10, grammarAccess.getEnvironmentAccess().getFullStopKeyword_6());
		}
	)
;

// Entry rule entryRuleMODE
entryRuleMODE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMODERule()); }
	iv_ruleMODE=ruleMODE
	{ $current=$iv_ruleMODE.current; }
	EOF;

// Rule MODE
ruleMODE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMODEAccess().getModeReqIDReqIDParserRuleCall_0_0());
				}
				lv_modeReqID_0_0=ruleReqID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMODERule());
					}
					set(
						$current,
						"modeReqID",
						lv_modeReqID_0_0,
						"org.xtext.example.mostml.MoStML.ReqID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getMODEAccess().getWhenKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMODEAccess().getPreModeConditionsMODECONDITIONParserRuleCall_2_0());
				}
				lv_preModeConditions_2_0=ruleMODECONDITION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMODERule());
					}
					add(
						$current,
						"preModeConditions",
						lv_preModeConditions_2_0,
						"org.xtext.example.mostml.MoStML.MODECONDITION");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMODEAccess().getPreRelationsRELATIONParserRuleCall_3_0_0());
					}
					lv_preRelations_3_0=ruleRELATION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMODERule());
						}
						add(
							$current,
							"preRelations",
							lv_preRelations_3_0,
							"org.xtext.example.mostml.MoStML.RELATION");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMODEAccess().getPreModeConditionsSTATECONDITONParserRuleCall_3_1_0_0());
						}
						lv_preModeConditions_4_1=ruleSTATECONDITON
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMODERule());
							}
							add(
								$current,
								"preModeConditions",
								lv_preModeConditions_4_1,
								"org.xtext.example.mostml.MoStML.STATECONDITON");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getMODEAccess().getPreModeConditionsATTRIBUTECONTIONParserRuleCall_3_1_0_1());
						}
						lv_preModeConditions_4_2=ruleATTRIBUTECONTION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMODERule());
							}
							add(
								$current,
								"preModeConditions",
								lv_preModeConditions_4_2,
								"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getMODEAccess().getPreModeConditionsMODECONDITIONParserRuleCall_3_1_0_2());
						}
						lv_preModeConditions_4_3=ruleMODECONDITION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMODERule());
							}
							add(
								$current,
								"preModeConditions",
								lv_preModeConditions_4_3,
								"org.xtext.example.mostml.MoStML.MODECONDITION");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getMODEAccess().getPreModeConditionsSIGNALCONDITIONParserRuleCall_3_1_0_3());
						}
						lv_preModeConditions_4_4=ruleSIGNALCONDITION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMODERule());
							}
							add(
								$current,
								"preModeConditions",
								lv_preModeConditions_4_4,
								"org.xtext.example.mostml.MoStML.SIGNALCONDITION");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getMODEAccess().getCommaKeyword_4());
		}
		otherlv_6='then'
		{
			newLeafNode(otherlv_6, grammarAccess.getMODEAccess().getThenKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMODEAccess().getPostModeConditionMODECONDITIONParserRuleCall_6_0());
				}
				lv_postModeCondition_7_0=ruleMODECONDITION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMODERule());
					}
					set(
						$current,
						"postModeCondition",
						lv_postModeCondition_7_0,
						"org.xtext.example.mostml.MoStML.MODECONDITION");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getMODEAccess().getFullStopKeyword_7());
		}
	)
;

// Entry rule entryRuleSTATE
entryRuleSTATE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSTATERule()); }
	iv_ruleSTATE=ruleSTATE
	{ $current=$iv_ruleSTATE.current; }
	EOF;

// Rule STATE
ruleSTATE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSTATEAccess().getStateReqIDReqIDParserRuleCall_0_0());
				}
				lv_stateReqID_0_0=ruleReqID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSTATERule());
					}
					set(
						$current,
						"stateReqID",
						lv_stateReqID_0_0,
						"org.xtext.example.mostml.MoStML.ReqID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getSTATEAccess().getWhenKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSTATEAccess().getPreStateConditionsSTATECONDITONParserRuleCall_2_0());
				}
				lv_preStateConditions_2_0=ruleSTATECONDITON
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSTATERule());
					}
					add(
						$current,
						"preStateConditions",
						lv_preStateConditions_2_0,
						"org.xtext.example.mostml.MoStML.STATECONDITON");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSTATEAccess().getRelationsRELATIONParserRuleCall_3_0_0());
					}
					lv_relations_3_0=ruleRELATION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSTATERule());
						}
						add(
							$current,
							"relations",
							lv_relations_3_0,
							"org.xtext.example.mostml.MoStML.RELATION");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSTATEAccess().getPreStateConditionsSTATECONDITONParserRuleCall_3_1_0_0());
						}
						lv_preStateConditions_4_1=ruleSTATECONDITON
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSTATERule());
							}
							add(
								$current,
								"preStateConditions",
								lv_preStateConditions_4_1,
								"org.xtext.example.mostml.MoStML.STATECONDITON");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getSTATEAccess().getPreStateConditionsATTRIBUTECONTIONParserRuleCall_3_1_0_1());
						}
						lv_preStateConditions_4_2=ruleATTRIBUTECONTION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSTATERule());
							}
							add(
								$current,
								"preStateConditions",
								lv_preStateConditions_4_2,
								"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getSTATEAccess().getPreStateConditionsMODECONDITIONParserRuleCall_3_1_0_2());
						}
						lv_preStateConditions_4_3=ruleMODECONDITION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSTATERule());
							}
							add(
								$current,
								"preStateConditions",
								lv_preStateConditions_4_3,
								"org.xtext.example.mostml.MoStML.MODECONDITION");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getSTATEAccess().getPreStateConditionsSIGNALCONDITIONParserRuleCall_3_1_0_3());
						}
						lv_preStateConditions_4_4=ruleSIGNALCONDITION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSTATERule());
							}
							add(
								$current,
								"preStateConditions",
								lv_preStateConditions_4_4,
								"org.xtext.example.mostml.MoStML.SIGNALCONDITION");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getSTATEAccess().getCommaKeyword_4());
		}
		otherlv_6='then'
		{
			newLeafNode(otherlv_6, grammarAccess.getSTATEAccess().getThenKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSTATEAccess().getPostStateConditionSTATECONDITONParserRuleCall_6_0());
				}
				lv_postStateCondition_7_0=ruleSTATECONDITON
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSTATERule());
					}
					set(
						$current,
						"postStateCondition",
						lv_postStateCondition_7_0,
						"org.xtext.example.mostml.MoStML.STATECONDITON");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getSTATEAccess().getFullStopKeyword_7());
		}
	)
;

// Entry rule entryRuleCONSTRAINT
entryRuleCONSTRAINT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCONSTRAINTRule()); }
	iv_ruleCONSTRAINT=ruleCONSTRAINT
	{ $current=$iv_ruleCONSTRAINT.current; }
	EOF;

// Rule CONSTRAINT
ruleCONSTRAINT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCONSTRAINTAccess().getConstraintReqIDReqIDParserRuleCall_0_0());
				}
				lv_constraintReqID_0_0=ruleReqID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
					}
					set(
						$current,
						"constraintReqID",
						lv_constraintReqID_0_0,
						"org.xtext.example.mostml.MoStML.ReqID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getCONSTRAINTAccess().getWhenKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPreConstraintConditionsSTATECONDITONParserRuleCall_2_0_0());
					}
					lv_preConstraintConditions_2_1=ruleSTATECONDITON
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						add(
							$current,
							"preConstraintConditions",
							lv_preConstraintConditions_2_1,
							"org.xtext.example.mostml.MoStML.STATECONDITON");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPreConstraintConditionsATTRIBUTECONTIONParserRuleCall_2_0_1());
					}
					lv_preConstraintConditions_2_2=ruleATTRIBUTECONTION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						add(
							$current,
							"preConstraintConditions",
							lv_preConstraintConditions_2_2,
							"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPreConstraintConditionsMODECONDITIONParserRuleCall_2_0_2());
					}
					lv_preConstraintConditions_2_3=ruleMODECONDITION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						add(
							$current,
							"preConstraintConditions",
							lv_preConstraintConditions_2_3,
							"org.xtext.example.mostml.MoStML.MODECONDITION");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPreConstraintConditionsSIGNALCONDITIONParserRuleCall_2_0_3());
					}
					lv_preConstraintConditions_2_4=ruleSIGNALCONDITION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						add(
							$current,
							"preConstraintConditions",
							lv_preConstraintConditions_2_4,
							"org.xtext.example.mostml.MoStML.SIGNALCONDITION");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getRelationsRELATIONParserRuleCall_3_0_0());
					}
					lv_relations_3_0=ruleRELATION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						add(
							$current,
							"relations",
							lv_relations_3_0,
							"org.xtext.example.mostml.MoStML.RELATION");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPreConstraintConditionsSTATECONDITONParserRuleCall_3_1_0_0());
						}
						lv_preConstraintConditions_4_1=ruleSTATECONDITON
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
							}
							add(
								$current,
								"preConstraintConditions",
								lv_preConstraintConditions_4_1,
								"org.xtext.example.mostml.MoStML.STATECONDITON");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPreConstraintConditionsATTRIBUTECONTIONParserRuleCall_3_1_0_1());
						}
						lv_preConstraintConditions_4_2=ruleATTRIBUTECONTION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
							}
							add(
								$current,
								"preConstraintConditions",
								lv_preConstraintConditions_4_2,
								"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPreConstraintConditionsMODECONDITIONParserRuleCall_3_1_0_2());
						}
						lv_preConstraintConditions_4_3=ruleMODECONDITION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
							}
							add(
								$current,
								"preConstraintConditions",
								lv_preConstraintConditions_4_3,
								"org.xtext.example.mostml.MoStML.MODECONDITION");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPreConstraintConditionsSIGNALCONDITIONParserRuleCall_3_1_0_3());
						}
						lv_preConstraintConditions_4_4=ruleSIGNALCONDITION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
							}
							add(
								$current,
								"preConstraintConditions",
								lv_preConstraintConditions_4_4,
								"org.xtext.example.mostml.MoStML.SIGNALCONDITION");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getCONSTRAINTAccess().getCommaKeyword_4());
		}
		otherlv_6='then'
		{
			newLeafNode(otherlv_6, grammarAccess.getCONSTRAINTAccess().getThenKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPostConstraintConditionSTATECONDITONParserRuleCall_6_0_0());
					}
					lv_postConstraintCondition_7_1=ruleSTATECONDITON
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						set(
							$current,
							"postConstraintCondition",
							lv_postConstraintCondition_7_1,
							"org.xtext.example.mostml.MoStML.STATECONDITON");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPostConstraintConditionATTRIBUTECONTIONParserRuleCall_6_0_1());
					}
					lv_postConstraintCondition_7_2=ruleATTRIBUTECONTION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						set(
							$current,
							"postConstraintCondition",
							lv_postConstraintCondition_7_2,
							"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPostConstraintConditionMODECONDITIONParserRuleCall_6_0_2());
					}
					lv_postConstraintCondition_7_3=ruleMODECONDITION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						set(
							$current,
							"postConstraintCondition",
							lv_postConstraintCondition_7_3,
							"org.xtext.example.mostml.MoStML.MODECONDITION");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCONSTRAINTAccess().getPostConstraintConditionARITHMETICCONDITIONParserRuleCall_6_0_3());
					}
					lv_postConstraintCondition_7_4=ruleARITHMETICCONDITION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCONSTRAINTRule());
						}
						set(
							$current,
							"postConstraintCondition",
							lv_postConstraintCondition_7_4,
							"org.xtext.example.mostml.MoStML.ARITHMETICCONDITION");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getCONSTRAINTAccess().getFullStopKeyword_7());
		}
	)
;

// Entry rule entryRulePROPERTY
entryRulePROPERTY returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPROPERTYRule()); }
	iv_rulePROPERTY=rulePROPERTY
	{ $current=$iv_rulePROPERTY.current; }
	EOF;

// Rule PROPERTY
rulePROPERTY returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPROPERTYAccess().getPropertyReqIDReqIDParserRuleCall_0_0());
				}
				lv_propertyReqID_0_0=ruleReqID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
					}
					set(
						$current,
						"propertyReqID",
						lv_propertyReqID_0_0,
						"org.xtext.example.mostml.MoStML.ReqID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getPROPERTYAccess().getWhenKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPreOperatorCTLOperatorParserRuleCall_2_0_0());
					}
					lv_preOperator_2_1=ruleCTLOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						set(
							$current,
							"preOperator",
							lv_preOperator_2_1,
							"org.xtext.example.mostml.MoStML.CTLOperator");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPreOperatorLTLOperatorParserRuleCall_2_0_1());
					}
					lv_preOperator_2_2=ruleLTLOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						set(
							$current,
							"preOperator",
							lv_preOperator_2_2,
							"org.xtext.example.mostml.MoStML.LTLOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPrePropertyConditionsSTATECONDITONParserRuleCall_3_0_0());
					}
					lv_prePropertyConditions_3_1=ruleSTATECONDITON
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						add(
							$current,
							"prePropertyConditions",
							lv_prePropertyConditions_3_1,
							"org.xtext.example.mostml.MoStML.STATECONDITON");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPrePropertyConditionsATTRIBUTECONTIONParserRuleCall_3_0_1());
					}
					lv_prePropertyConditions_3_2=ruleATTRIBUTECONTION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						add(
							$current,
							"prePropertyConditions",
							lv_prePropertyConditions_3_2,
							"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPrePropertyConditionsMODECONDITIONParserRuleCall_3_0_2());
					}
					lv_prePropertyConditions_3_3=ruleMODECONDITION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						add(
							$current,
							"prePropertyConditions",
							lv_prePropertyConditions_3_3,
							"org.xtext.example.mostml.MoStML.MODECONDITION");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPreRelationsRELATIONParserRuleCall_4_0_0());
					}
					lv_preRelations_4_0=ruleRELATION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						add(
							$current,
							"preRelations",
							lv_preRelations_4_0,
							"org.xtext.example.mostml.MoStML.RELATION");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPROPERTYAccess().getPrePropertyConditionsSTATECONDITONParserRuleCall_4_1_0_0());
						}
						lv_prePropertyConditions_5_1=ruleSTATECONDITON
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
							}
							add(
								$current,
								"prePropertyConditions",
								lv_prePropertyConditions_5_1,
								"org.xtext.example.mostml.MoStML.STATECONDITON");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getPROPERTYAccess().getPrePropertyConditionsATTRIBUTECONTIONParserRuleCall_4_1_0_1());
						}
						lv_prePropertyConditions_5_2=ruleATTRIBUTECONTION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
							}
							add(
								$current,
								"prePropertyConditions",
								lv_prePropertyConditions_5_2,
								"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getPROPERTYAccess().getPrePropertyConditionsMODECONDITIONParserRuleCall_4_1_0_2());
						}
						lv_prePropertyConditions_5_3=ruleMODECONDITION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
							}
							add(
								$current,
								"prePropertyConditions",
								lv_prePropertyConditions_5_3,
								"org.xtext.example.mostml.MoStML.MODECONDITION");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getPROPERTYAccess().getCommaKeyword_5());
		}
		otherlv_7='then'
		{
			newLeafNode(otherlv_7, grammarAccess.getPROPERTYAccess().getThenKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPostOperatorCTLOperatorParserRuleCall_7_0_0());
					}
					lv_postOperator_8_1=ruleCTLOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						set(
							$current,
							"postOperator",
							lv_postOperator_8_1,
							"org.xtext.example.mostml.MoStML.CTLOperator");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPostOperatorLTLOperatorParserRuleCall_7_0_1());
					}
					lv_postOperator_8_2=ruleLTLOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						set(
							$current,
							"postOperator",
							lv_postOperator_8_2,
							"org.xtext.example.mostml.MoStML.LTLOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPostPropertyConditionsSTATECONDITONParserRuleCall_8_0_0());
					}
					lv_postPropertyConditions_9_1=ruleSTATECONDITON
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						add(
							$current,
							"postPropertyConditions",
							lv_postPropertyConditions_9_1,
							"org.xtext.example.mostml.MoStML.STATECONDITON");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPostPropertyConditionsATTRIBUTECONTIONParserRuleCall_8_0_1());
					}
					lv_postPropertyConditions_9_2=ruleATTRIBUTECONTION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						add(
							$current,
							"postPropertyConditions",
							lv_postPropertyConditions_9_2,
							"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPostPropertyConditionsMODECONDITIONParserRuleCall_8_0_2());
					}
					lv_postPropertyConditions_9_3=ruleMODECONDITION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						add(
							$current,
							"postPropertyConditions",
							lv_postPropertyConditions_9_3,
							"org.xtext.example.mostml.MoStML.MODECONDITION");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPROPERTYAccess().getPostRelationsRELATIONParserRuleCall_9_0_0());
					}
					lv_postRelations_10_0=ruleRELATION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
						}
						add(
							$current,
							"postRelations",
							lv_postRelations_10_0,
							"org.xtext.example.mostml.MoStML.RELATION");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPROPERTYAccess().getPostPropertyConditionsSTATECONDITONParserRuleCall_9_1_0_0());
						}
						lv_postPropertyConditions_11_1=ruleSTATECONDITON
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
							}
							add(
								$current,
								"postPropertyConditions",
								lv_postPropertyConditions_11_1,
								"org.xtext.example.mostml.MoStML.STATECONDITON");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getPROPERTYAccess().getPostPropertyConditionsATTRIBUTECONTIONParserRuleCall_9_1_0_1());
						}
						lv_postPropertyConditions_11_2=ruleATTRIBUTECONTION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
							}
							add(
								$current,
								"postPropertyConditions",
								lv_postPropertyConditions_11_2,
								"org.xtext.example.mostml.MoStML.ATTRIBUTECONTION");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getPROPERTYAccess().getPostPropertyConditionsMODECONDITIONParserRuleCall_9_1_0_2());
						}
						lv_postPropertyConditions_11_3=ruleMODECONDITION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPROPERTYRule());
							}
							add(
								$current,
								"postPropertyConditions",
								lv_postPropertyConditions_11_3,
								"org.xtext.example.mostml.MoStML.MODECONDITION");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_12='.'
		{
			newLeafNode(otherlv_12, grammarAccess.getPROPERTYAccess().getFullStopKeyword_10());
		}
	)
;

// Entry rule entryRuleRANG
entryRuleRANG returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRANGRule()); }
	iv_ruleRANG=ruleRANG
	{ $current=$iv_ruleRANG.current; }
	EOF;

// Rule RANG
ruleRANG returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRANGAccess().getCompOperator1COMPARISONOPERATORParserRuleCall_0_0());
				}
				lv_compOperator1_0_0=ruleCOMPARISONOPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRANGRule());
					}
					set(
						$current,
						"compOperator1",
						lv_compOperator1_0_0,
						"org.xtext.example.mostml.MoStML.COMPARISONOPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRANGAccess().getBound1ATTRIBUTEVALUEParserRuleCall_1_0());
				}
				lv_bound1_1_0=ruleATTRIBUTEVALUE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRANGRule());
					}
					set(
						$current,
						"bound1",
						lv_bound1_1_0,
						"org.xtext.example.mostml.MoStML.ATTRIBUTEVALUE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='and'
		{
			newLeafNode(otherlv_2, grammarAccess.getRANGAccess().getAndKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRANGAccess().getCompOperator2COMPARISONOPERATORParserRuleCall_3_0());
				}
				lv_compOperator2_3_0=ruleCOMPARISONOPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRANGRule());
					}
					set(
						$current,
						"compOperator2",
						lv_compOperator2_3_0,
						"org.xtext.example.mostml.MoStML.COMPARISONOPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRANGAccess().getBound2ATTRIBUTEVALUEParserRuleCall_4_0());
				}
				lv_bound2_4_0=ruleATTRIBUTEVALUE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRANGRule());
					}
					set(
						$current,
						"bound2",
						lv_bound2_4_0,
						"org.xtext.example.mostml.MoStML.ATTRIBUTEVALUE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRANGAccess().getUnitUNITParserRuleCall_5_0());
				}
				lv_unit_5_0=ruleUNIT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRANGRule());
					}
					set(
						$current,
						"unit",
						lv_unit_5_0,
						"org.xtext.example.mostml.MoStML.UNIT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCTLOperator
entryRuleCTLOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCTLOperatorRule()); }
	iv_ruleCTLOperator=ruleCTLOperator
	{ $current=$iv_ruleCTLOperator.current; }
	EOF;

// Rule CTLOperator
ruleCTLOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCTLOperatorAccess().getAGParserRuleCall_0());
		}
		this_AG_0=ruleAG
		{
			$current = $this_AG_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCTLOperatorAccess().getAFParserRuleCall_1());
		}
		this_AF_1=ruleAF
		{
			$current = $this_AF_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCTLOperatorAccess().getEFParserRuleCall_2());
		}
		this_EF_2=ruleEF
		{
			$current = $this_EF_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCTLOperatorAccess().getEGParserRuleCall_3());
		}
		this_EG_3=ruleEG
		{
			$current = $this_EG_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCTLOperatorAccess().getAXParserRuleCall_4());
		}
		this_AX_4=ruleAX
		{
			$current = $this_AX_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAX
entryRuleAX returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAXRule()); }
	iv_ruleAX=ruleAX
	{ $current=$iv_ruleAX.current; }
	EOF;

// Rule AX
ruleAX returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_ax_0_0='all'
				{
					newLeafNode(lv_ax_0_0, grammarAccess.getAXAccess().getAxAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAXRule());
					}
					setWithLastConsumed($current, "ax", lv_ax_0_0, "all");
				}
			)
		)
		otherlv_1='next'
		{
			newLeafNode(otherlv_1, grammarAccess.getAXAccess().getNextKeyword_1());
		}
	)
;

// Entry rule entryRuleEG
entryRuleEG returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEGRule()); }
	iv_ruleEG=ruleEG
	{ $current=$iv_ruleEG.current; }
	EOF;

// Rule EG
ruleEG returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_eg_0_0='exist'
				{
					newLeafNode(lv_eg_0_0, grammarAccess.getEGAccess().getEgExistKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEGRule());
					}
					setWithLastConsumed($current, "eg", lv_eg_0_0, "exist");
				}
			)
		)
		otherlv_1='globally'
		{
			newLeafNode(otherlv_1, grammarAccess.getEGAccess().getGloballyKeyword_1());
		}
	)
;

// Entry rule entryRuleEF
entryRuleEF returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEFRule()); }
	iv_ruleEF=ruleEF
	{ $current=$iv_ruleEF.current; }
	EOF;

// Rule EF
ruleEF returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_ef_0_0='exist'
				{
					newLeafNode(lv_ef_0_0, grammarAccess.getEFAccess().getEfExistKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEFRule());
					}
					setWithLastConsumed($current, "ef", lv_ef_0_0, "exist");
				}
			)
		)
		otherlv_1='future'
		{
			newLeafNode(otherlv_1, grammarAccess.getEFAccess().getFutureKeyword_1());
		}
	)
;

// Entry rule entryRuleAF
entryRuleAF returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAFRule()); }
	iv_ruleAF=ruleAF
	{ $current=$iv_ruleAF.current; }
	EOF;

// Rule AF
ruleAF returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_af_0_0='all'
				{
					newLeafNode(lv_af_0_0, grammarAccess.getAFAccess().getAfAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAFRule());
					}
					setWithLastConsumed($current, "af", lv_af_0_0, "all");
				}
			)
		)
		otherlv_1='future'
		{
			newLeafNode(otherlv_1, grammarAccess.getAFAccess().getFutureKeyword_1());
		}
	)
;

// Entry rule entryRuleAG
entryRuleAG returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAGRule()); }
	iv_ruleAG=ruleAG
	{ $current=$iv_ruleAG.current; }
	EOF;

// Rule AG
ruleAG returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_ag_0_0='all'
				{
					newLeafNode(lv_ag_0_0, grammarAccess.getAGAccess().getAgAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAGRule());
					}
					setWithLastConsumed($current, "ag", lv_ag_0_0, "all");
				}
			)
		)
		otherlv_1='globally'
		{
			newLeafNode(otherlv_1, grammarAccess.getAGAccess().getGloballyKeyword_1());
		}
	)
;

// Entry rule entryRuleLTLOperator
entryRuleLTLOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLTLOperatorRule()); }
	iv_ruleLTLOperator=ruleLTLOperator
	{ $current=$iv_ruleLTLOperator.current; }
	EOF;

// Rule LTLOperator
ruleLTLOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLTLOperatorAccess().getFParserRuleCall_0());
		}
		this_F_0=ruleF
		{
			$current = $this_F_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLTLOperatorAccess().getGParserRuleCall_1());
		}
		this_G_1=ruleG
		{
			$current = $this_G_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLTLOperatorAccess().getXParserRuleCall_2());
		}
		this_X_2=ruleX
		{
			$current = $this_X_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleF
entryRuleF returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFRule()); }
	iv_ruleF=ruleF
	{ $current=$iv_ruleF.current; }
	EOF;

// Rule F
ruleF returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_f_0_0='future'
			{
				newLeafNode(lv_f_0_0, grammarAccess.getFAccess().getFFutureKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFRule());
				}
				setWithLastConsumed($current, "f", lv_f_0_0, "future");
			}
		)
	)
;

// Entry rule entryRuleG
entryRuleG returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGRule()); }
	iv_ruleG=ruleG
	{ $current=$iv_ruleG.current; }
	EOF;

// Rule G
ruleG returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_g_0_0='globally'
			{
				newLeafNode(lv_g_0_0, grammarAccess.getGAccess().getGGloballyKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getGRule());
				}
				setWithLastConsumed($current, "g", lv_g_0_0, "globally");
			}
		)
	)
;

// Entry rule entryRuleX
entryRuleX returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXRule()); }
	iv_ruleX=ruleX
	{ $current=$iv_ruleX.current; }
	EOF;

// Rule X
ruleX returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_x_0_0='next'
			{
				newLeafNode(lv_x_0_0, grammarAccess.getXAccess().getXNextKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getXRule());
				}
				setWithLastConsumed($current, "x", lv_x_0_0, "next");
			}
		)
	)
;

// Entry rule entryRuleRELATION
entryRuleRELATION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRELATIONRule()); }
	iv_ruleRELATION=ruleRELATION
	{ $current=$iv_ruleRELATION.current; }
	EOF;

// Rule RELATION
ruleRELATION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_relaion_0_1='and'
				{
					newLeafNode(lv_relaion_0_1, grammarAccess.getRELATIONAccess().getRelaionAndKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRELATIONRule());
					}
					setWithLastConsumed($current, "relaion", lv_relaion_0_1, null);
				}
				    |
				lv_relaion_0_2='or'
				{
					newLeafNode(lv_relaion_0_2, grammarAccess.getRELATIONAccess().getRelaionOrKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRELATIONRule());
					}
					setWithLastConsumed($current, "relaion", lv_relaion_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleSIGNALCONDITION
entryRuleSIGNALCONDITION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSIGNALCONDITIONRule()); }
	iv_ruleSIGNALCONDITION=ruleSIGNALCONDITION
	{ $current=$iv_ruleSIGNALCONDITION.current; }
	EOF;

// Rule SIGNALCONDITION
ruleSIGNALCONDITION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			newLeafNode(this_ID_0, grammarAccess.getSIGNALCONDITIONAccess().getIDTerminalRuleCall_0());
		}
		(
			this_ID_1=RULE_ID
			{
				newLeafNode(this_ID_1, grammarAccess.getSIGNALCONDITIONAccess().getIDTerminalRuleCall_1());
			}
		)*
		otherlv_2='receives'
		{
			newLeafNode(otherlv_2, grammarAccess.getSIGNALCONDITIONAccess().getReceivesKeyword_2());
		}
		(
			(
				lv_signalName_3_0=RULE_ID
				{
					newLeafNode(lv_signalName_3_0, grammarAccess.getSIGNALCONDITIONAccess().getSignalNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSIGNALCONDITIONRule());
					}
					setWithLastConsumed(
						$current,
						"signalName",
						lv_signalName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_ID_4=RULE_ID
		{
			newLeafNode(this_ID_4, grammarAccess.getSIGNALCONDITIONAccess().getIDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleReqID
entryRuleReqID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReqIDRule()); }
	iv_ruleReqID=ruleReqID
	{ $current=$iv_ruleReqID.current; }
	EOF;

// Rule ReqID
ruleReqID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getReqIDAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_reqID_1_0=RULE_INT
				{
					newLeafNode(lv_reqID_1_0, grammarAccess.getReqIDAccess().getReqIDINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReqIDRule());
					}
					addWithLastConsumed(
						$current,
						"reqID",
						lv_reqID_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getReqIDAccess().getFullStopKeyword_2_0());
			}
			(
				(
					lv_reqID_3_0=RULE_INT
					{
						newLeafNode(lv_reqID_3_0, grammarAccess.getReqIDAccess().getReqIDINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReqIDRule());
						}
						addWithLastConsumed(
							$current,
							"reqID",
							lv_reqID_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getReqIDAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleATTRIBUTECONTION
entryRuleATTRIBUTECONTION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getATTRIBUTECONTIONRule()); }
	iv_ruleATTRIBUTECONTION=ruleATTRIBUTECONTION
	{ $current=$iv_ruleATTRIBUTECONTION.current; }
	EOF;

// Rule ATTRIBUTECONTION
ruleATTRIBUTECONTION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			newLeafNode(this_ID_0, grammarAccess.getATTRIBUTECONTIONAccess().getIDTerminalRuleCall_0());
		}
		(
			this_ID_1=RULE_ID
			{
				newLeafNode(this_ID_1, grammarAccess.getATTRIBUTECONTIONAccess().getIDTerminalRuleCall_1());
			}
		)*
		(
			(
				lv_attributeName_2_0=RULE_ID
				{
					newLeafNode(lv_attributeName_2_0, grammarAccess.getATTRIBUTECONTIONAccess().getAttributeNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getATTRIBUTECONTIONRule());
					}
					setWithLastConsumed(
						$current,
						"attributeName",
						lv_attributeName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_ID_3=RULE_ID
		{
			newLeafNode(this_ID_3, grammarAccess.getATTRIBUTECONTIONAccess().getIDTerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getATTRIBUTECONTIONAccess().getOperatorCOMPARISONOPERATORParserRuleCall_4_0());
				}
				lv_operator_4_0=ruleCOMPARISONOPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATTRIBUTECONTIONRule());
					}
					set(
						$current,
						"operator",
						lv_operator_4_0,
						"org.xtext.example.mostml.MoStML.COMPARISONOPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getATTRIBUTECONTIONAccess().getAttributeValueATTRIBUTEVALUEParserRuleCall_5_0());
				}
				lv_attributeValue_5_0=ruleATTRIBUTEVALUE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATTRIBUTECONTIONRule());
					}
					set(
						$current,
						"attributeValue",
						lv_attributeValue_5_0,
						"org.xtext.example.mostml.MoStML.ATTRIBUTEVALUE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getATTRIBUTECONTIONAccess().getUnitUNITParserRuleCall_6_0());
				}
				lv_unit_6_0=ruleUNIT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATTRIBUTECONTIONRule());
					}
					add(
						$current,
						"unit",
						lv_unit_6_0,
						"org.xtext.example.mostml.MoStML.UNIT");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleUNIT
entryRuleUNIT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUNITRule()); }
	iv_ruleUNIT=ruleUNIT
	{ $current=$iv_ruleUNIT.current; }
	EOF;

// Rule UNIT
ruleUNIT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUNITAccess().getSPEEDParserRuleCall_0());
		}
		this_SPEED_0=ruleSPEED
		{
			$current = $this_SPEED_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUNITAccess().getACCParserRuleCall_1());
		}
		this_ACC_1=ruleACC
		{
			$current = $this_ACC_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUNITAccess().getTIMEParserRuleCall_2());
		}
		this_TIME_2=ruleTIME
		{
			$current = $this_TIME_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUNITAccess().getWEIGHTParserRuleCall_3());
		}
		this_WEIGHT_3=ruleWEIGHT
		{
			$current = $this_WEIGHT_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleACC
entryRuleACC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getACCRule()); }
	iv_ruleACC=ruleACC
	{ $current=$iv_ruleACC.current; }
	EOF;

// Rule ACC
ruleACC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_acc_0_0='m/s2'
			{
				newLeafNode(lv_acc_0_0, grammarAccess.getACCAccess().getAccMS2Keyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getACCRule());
				}
				setWithLastConsumed($current, "acc", lv_acc_0_0, "m/s2");
			}
		)
	)
;

// Entry rule entryRuleWEIGHT
entryRuleWEIGHT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWEIGHTRule()); }
	iv_ruleWEIGHT=ruleWEIGHT
	{ $current=$iv_ruleWEIGHT.current; }
	EOF;

// Rule WEIGHT
ruleWEIGHT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_weight_0_0='kg'
			{
				newLeafNode(lv_weight_0_0, grammarAccess.getWEIGHTAccess().getWeightKgKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getWEIGHTRule());
				}
				setWithLastConsumed($current, "weight", lv_weight_0_0, "kg");
			}
		)
	)
;

// Entry rule entryRuleTIME
entryRuleTIME returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTIMERule()); }
	iv_ruleTIME=ruleTIME
	{ $current=$iv_ruleTIME.current; }
	EOF;

// Rule TIME
ruleTIME returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_time_0_0='s'
			{
				newLeafNode(lv_time_0_0, grammarAccess.getTIMEAccess().getTimeSKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTIMERule());
				}
				setWithLastConsumed($current, "time", lv_time_0_0, "s");
			}
		)
	)
;

// Entry rule entryRuleSPEED
entryRuleSPEED returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSPEEDRule()); }
	iv_ruleSPEED=ruleSPEED
	{ $current=$iv_ruleSPEED.current; }
	EOF;

// Rule SPEED
ruleSPEED returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_speed_0_0='km/h'
			{
				newLeafNode(lv_speed_0_0, grammarAccess.getSPEEDAccess().getSpeedKmHKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSPEEDRule());
				}
				setWithLastConsumed($current, "speed", lv_speed_0_0, "km/h");
			}
		)
	)
;

// Entry rule entryRuleATTRIBUTEVALUE
entryRuleATTRIBUTEVALUE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getATTRIBUTEVALUERule()); }
	iv_ruleATTRIBUTEVALUE=ruleATTRIBUTEVALUE
	{ $current=$iv_ruleATTRIBUTEVALUE.current; }
	EOF;

// Rule ATTRIBUTEVALUE
ruleATTRIBUTEVALUE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getATTRIBUTEVALUEAccess().getINTTYPEParserRuleCall_0());
		}
		this_INTTYPE_0=ruleINTTYPE
		{
			$current = $this_INTTYPE_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getATTRIBUTEVALUEAccess().getSTRINGTYPEParserRuleCall_1());
		}
		this_STRINGTYPE_1=ruleSTRINGTYPE
		{
			$current = $this_STRINGTYPE_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getATTRIBUTEVALUEAccess().getBOOLEANTYPEParserRuleCall_2());
		}
		this_BOOLEANTYPE_2=ruleBOOLEANTYPE
		{
			$current = $this_BOOLEANTYPE_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSTRINGTYPE
entryRuleSTRINGTYPE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSTRINGTYPERule()); }
	iv_ruleSTRINGTYPE=ruleSTRINGTYPE
	{ $current=$iv_ruleSTRINGTYPE.current; }
	EOF;

// Rule STRINGTYPE
ruleSTRINGTYPE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_string_0_0=RULE_STRING
			{
				newLeafNode(lv_string_0_0, grammarAccess.getSTRINGTYPEAccess().getStringSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSTRINGTYPERule());
				}
				setWithLastConsumed(
					$current,
					"string",
					lv_string_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleINTTYPE
entryRuleINTTYPE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getINTTYPERule()); }
	iv_ruleINTTYPE=ruleINTTYPE
	{ $current=$iv_ruleINTTYPE.current; }
	EOF;

// Rule INTTYPE
ruleINTTYPE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_int_0_0=RULE_INT
			{
				newLeafNode(lv_int_0_0, grammarAccess.getINTTYPEAccess().getIntINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getINTTYPERule());
				}
				setWithLastConsumed(
					$current,
					"int",
					lv_int_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleBOOLEANTYPE
entryRuleBOOLEANTYPE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBOOLEANTYPERule()); }
	iv_ruleBOOLEANTYPE=ruleBOOLEANTYPE
	{ $current=$iv_ruleBOOLEANTYPE.current; }
	EOF;

// Rule BOOLEANTYPE
ruleBOOLEANTYPE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='TRUE'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getBOOLEANTYPEAccess().getValueTRUEKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBOOLEANTYPERule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='FALSE'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getBOOLEANTYPEAccess().getValueFALSEKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBOOLEANTYPERule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleSTATECONDITON
entryRuleSTATECONDITON returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSTATECONDITONRule()); }
	iv_ruleSTATECONDITON=ruleSTATECONDITON
	{ $current=$iv_ruleSTATECONDITON.current; }
	EOF;

// Rule STATECONDITON
ruleSTATECONDITON returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_ID_0=RULE_ID
			{
				newLeafNode(this_ID_0, grammarAccess.getSTATECONDITONAccess().getIDTerminalRuleCall_0_0());
			}
			(
				this_ID_1=RULE_ID
				{
					newLeafNode(this_ID_1, grammarAccess.getSTATECONDITONAccess().getIDTerminalRuleCall_0_1());
				}
			)*
			otherlv_2='state'
			{
				newLeafNode(otherlv_2, grammarAccess.getSTATECONDITONAccess().getStateKeyword_0_2());
			}
			(
				(
					lv_stateName_3_0=RULE_ID
					{
						newLeafNode(lv_stateName_3_0, grammarAccess.getSTATECONDITONAccess().getStateNameIDTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSTATECONDITONRule());
						}
						setWithLastConsumed(
							$current,
							"stateName",
							lv_stateName_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				(
					this_ID_4=RULE_ID
					{
						newLeafNode(this_ID_4, grammarAccess.getSTATECONDITONAccess().getIDTerminalRuleCall_1_0_0());
					}
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getSTATECONDITONAccess().getCompOperatorCOMPARISONOPERATORParserRuleCall_1_0_1_0());
						}
						lv_compOperator_5_0=ruleCOMPARISONOPERATOR
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSTATECONDITONRule());
							}
							set(
								$current,
								"compOperator",
								lv_compOperator_5_0,
								"org.xtext.example.mostml.MoStML.COMPARISONOPERATOR");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				this_ID_6=RULE_ID
				{
					newLeafNode(this_ID_6, grammarAccess.getSTATECONDITONAccess().getIDTerminalRuleCall_1_1());
				}
			)*
			otherlv_7='state'
			{
				newLeafNode(otherlv_7, grammarAccess.getSTATECONDITONAccess().getStateKeyword_1_2());
			}
			(
				(
					lv_stateName_8_0=RULE_ID
					{
						newLeafNode(lv_stateName_8_0, grammarAccess.getSTATECONDITONAccess().getStateNameIDTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSTATECONDITONRule());
						}
						setWithLastConsumed(
							$current,
							"stateName",
							lv_stateName_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMODECONDITION
entryRuleMODECONDITION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMODECONDITIONRule()); }
	iv_ruleMODECONDITION=ruleMODECONDITION
	{ $current=$iv_ruleMODECONDITION.current; }
	EOF;

// Rule MODECONDITION
ruleMODECONDITION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			newLeafNode(this_ID_0, grammarAccess.getMODECONDITIONAccess().getIDTerminalRuleCall_0());
		}
		(
			this_ID_1=RULE_ID
			{
				newLeafNode(this_ID_1, grammarAccess.getMODECONDITIONAccess().getIDTerminalRuleCall_1());
			}
		)*
		otherlv_2='mode'
		{
			newLeafNode(otherlv_2, grammarAccess.getMODECONDITIONAccess().getModeKeyword_2());
		}
		(
			(
				lv_modeName_3_0=RULE_ID
				{
					newLeafNode(lv_modeName_3_0, grammarAccess.getMODECONDITIONAccess().getModeNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMODECONDITIONRule());
					}
					setWithLastConsumed(
						$current,
						"modeName",
						lv_modeName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleARITHMETICCONDITION
entryRuleARITHMETICCONDITION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getARITHMETICCONDITIONRule()); }
	iv_ruleARITHMETICCONDITION=ruleARITHMETICCONDITION
	{ $current=$iv_ruleARITHMETICCONDITION.current; }
	EOF;

// Rule ARITHMETICCONDITION
ruleARITHMETICCONDITION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			newLeafNode(this_ID_0, grammarAccess.getARITHMETICCONDITIONAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				lv_result_1_0=RULE_ID
				{
					newLeafNode(lv_result_1_0, grammarAccess.getARITHMETICCONDITIONAccess().getResultIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getARITHMETICCONDITIONRule());
					}
					setWithLastConsumed(
						$current,
						"result",
						lv_result_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			this_ID_2=RULE_ID
			{
				newLeafNode(this_ID_2, grammarAccess.getARITHMETICCONDITIONAccess().getIDTerminalRuleCall_2());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getARITHMETICCONDITIONAccess().getCompconditionCOMPARISONOPERATORParserRuleCall_3_0());
				}
				lv_compcondition_3_0=ruleCOMPARISONOPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getARITHMETICCONDITIONRule());
					}
					set(
						$current,
						"compcondition",
						lv_compcondition_3_0,
						"org.xtext.example.mostml.MoStML.COMPARISONOPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_var1_4_0=RULE_ID
				{
					newLeafNode(lv_var1_4_0, grammarAccess.getARITHMETICCONDITIONAccess().getVar1IDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getARITHMETICCONDITIONRule());
					}
					setWithLastConsumed(
						$current,
						"var1",
						lv_var1_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getARITHMETICCONDITIONAccess().getArithmeticOperatorARITHMETICOPERATORParserRuleCall_5_0());
				}
				lv_arithmeticOperator_5_0=ruleARITHMETICOPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getARITHMETICCONDITIONRule());
					}
					set(
						$current,
						"arithmeticOperator",
						lv_arithmeticOperator_5_0,
						"org.xtext.example.mostml.MoStML.ARITHMETICOPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_var2_6_0=RULE_ID
					{
						newLeafNode(lv_var2_6_0, grammarAccess.getARITHMETICCONDITIONAccess().getVar2IDTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getARITHMETICCONDITIONRule());
						}
						setWithLastConsumed(
							$current,
							"var2",
							lv_var2_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			(
				(
					lv_var3_7_0=RULE_INT
					{
						newLeafNode(lv_var3_7_0, grammarAccess.getARITHMETICCONDITIONAccess().getVar3INTTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getARITHMETICCONDITIONRule());
						}
						setWithLastConsumed(
							$current,
							"var3",
							lv_var3_7_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleARITHMETICOPERATOR
entryRuleARITHMETICOPERATOR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getARITHMETICOPERATORRule()); }
	iv_ruleARITHMETICOPERATOR=ruleARITHMETICOPERATOR
	{ $current=$iv_ruleARITHMETICOPERATOR.current; }
	EOF;

// Rule ARITHMETICOPERATOR
ruleARITHMETICOPERATOR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getARITHMETICOPERATORAccess().getADDParserRuleCall_0());
		}
		this_ADD_0=ruleADD
		{
			$current = $this_ADD_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getARITHMETICOPERATORAccess().getSUBTRACTIONParserRuleCall_1());
		}
		this_SUBTRACTION_1=ruleSUBTRACTION
		{
			$current = $this_SUBTRACTION_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getARITHMETICOPERATORAccess().getMULTIPLICATIONParserRuleCall_2());
		}
		this_MULTIPLICATION_2=ruleMULTIPLICATION
		{
			$current = $this_MULTIPLICATION_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getARITHMETICOPERATORAccess().getDIVISIONParserRuleCall_3());
		}
		this_DIVISION_3=ruleDIVISION
		{
			$current = $this_DIVISION_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getARITHMETICOPERATORAccess().getMODULEParserRuleCall_4());
		}
		this_MODULE_4=ruleMODULE
		{
			$current = $this_MODULE_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMODULE
entryRuleMODULE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMODULERule()); }
	iv_ruleMODULE=ruleMODULE
	{ $current=$iv_ruleMODULE.current; }
	EOF;

// Rule MODULE
ruleMODULE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_add_0_0='moduled'
				{
					newLeafNode(lv_add_0_0, grammarAccess.getMODULEAccess().getAddModuledKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMODULERule());
					}
					setWithLastConsumed($current, "add", lv_add_0_0, "moduled");
				}
			)
		)
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getMODULEAccess().getByKeyword_1());
		}
	)
;

// Entry rule entryRuleDIVISION
entryRuleDIVISION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDIVISIONRule()); }
	iv_ruleDIVISION=ruleDIVISION
	{ $current=$iv_ruleDIVISION.current; }
	EOF;

// Rule DIVISION
ruleDIVISION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_division_0_0='divided'
				{
					newLeafNode(lv_division_0_0, grammarAccess.getDIVISIONAccess().getDivisionDividedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDIVISIONRule());
					}
					setWithLastConsumed($current, "division", lv_division_0_0, "divided");
				}
			)
		)
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getDIVISIONAccess().getByKeyword_1());
		}
	)
;

// Entry rule entryRuleMULTIPLICATION
entryRuleMULTIPLICATION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMULTIPLICATIONRule()); }
	iv_ruleMULTIPLICATION=ruleMULTIPLICATION
	{ $current=$iv_ruleMULTIPLICATION.current; }
	EOF;

// Rule MULTIPLICATION
ruleMULTIPLICATION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_multiplication_0_0='multiplied'
				{
					newLeafNode(lv_multiplication_0_0, grammarAccess.getMULTIPLICATIONAccess().getMultiplicationMultipliedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMULTIPLICATIONRule());
					}
					setWithLastConsumed($current, "multiplication", lv_multiplication_0_0, "multiplied");
				}
			)
		)
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getMULTIPLICATIONAccess().getByKeyword_1());
		}
	)
;

// Entry rule entryRuleSUBTRACTION
entryRuleSUBTRACTION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSUBTRACTIONRule()); }
	iv_ruleSUBTRACTION=ruleSUBTRACTION
	{ $current=$iv_ruleSUBTRACTION.current; }
	EOF;

// Rule SUBTRACTION
ruleSUBTRACTION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_substraction_0_0='subtracted'
				{
					newLeafNode(lv_substraction_0_0, grammarAccess.getSUBTRACTIONAccess().getSubstractionSubtractedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSUBTRACTIONRule());
					}
					setWithLastConsumed($current, "substraction", lv_substraction_0_0, "subtracted");
				}
			)
		)
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getSUBTRACTIONAccess().getByKeyword_1());
		}
	)
;

// Entry rule entryRuleADD
entryRuleADD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getADDRule()); }
	iv_ruleADD=ruleADD
	{ $current=$iv_ruleADD.current; }
	EOF;

// Rule ADD
ruleADD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_add_0_0='added'
				{
					newLeafNode(lv_add_0_0, grammarAccess.getADDAccess().getAddAddedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getADDRule());
					}
					setWithLastConsumed($current, "add", lv_add_0_0, "added");
				}
			)
		)
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getADDAccess().getByKeyword_1());
		}
	)
;

// Entry rule entryRuleCOMPARISONOPERATOR
entryRuleCOMPARISONOPERATOR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCOMPARISONOPERATORRule()); }
	iv_ruleCOMPARISONOPERATOR=ruleCOMPARISONOPERATOR
	{ $current=$iv_ruleCOMPARISONOPERATOR.current; }
	EOF;

// Rule COMPARISONOPERATOR
ruleCOMPARISONOPERATOR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCOMPARISONOPERATORAccess().getEQUALParserRuleCall_0());
		}
		this_EQUAL_0=ruleEQUAL
		{
			$current = $this_EQUAL_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCOMPARISONOPERATORAccess().getLESSParserRuleCall_1());
		}
		this_LESS_1=ruleLESS
		{
			$current = $this_LESS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCOMPARISONOPERATORAccess().getGREATERParserRuleCall_2());
		}
		this_GREATER_2=ruleGREATER
		{
			$current = $this_GREATER_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCOMPARISONOPERATORAccess().getNOTEQUALParserRuleCall_3());
		}
		this_NOTEQUAL_3=ruleNOTEQUAL
		{
			$current = $this_NOTEQUAL_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCOMPARISONOPERATORAccess().getLESSEQUALParserRuleCall_4());
		}
		this_LESSEQUAL_4=ruleLESSEQUAL
		{
			$current = $this_LESSEQUAL_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCOMPARISONOPERATORAccess().getGREATEQUALParserRuleCall_5());
		}
		this_GREATEQUAL_5=ruleGREATEQUAL
		{
			$current = $this_GREATEQUAL_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCOMPARISONOPERATORAccess().getNOTParserRuleCall_6());
		}
		this_NOT_6=ruleNOT
		{
			$current = $this_NOT_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNOT
entryRuleNOT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNOTRule()); }
	iv_ruleNOT=ruleNOT
	{ $current=$iv_ruleNOT.current; }
	EOF;

// Rule NOT
ruleNOT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_not_0_0='not'
			{
				newLeafNode(lv_not_0_0, grammarAccess.getNOTAccess().getNotNotKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNOTRule());
				}
				setWithLastConsumed($current, "not", lv_not_0_0, "not");
			}
		)
	)
;

// Entry rule entryRuleGREATEQUAL
entryRuleGREATEQUAL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGREATEQUALRule()); }
	iv_ruleGREATEQUAL=ruleGREATEQUAL
	{ $current=$iv_ruleGREATEQUAL.current; }
	EOF;

// Rule GREATEQUAL
ruleGREATEQUAL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_greateEqual_0_0='greater'
				{
					newLeafNode(lv_greateEqual_0_0, grammarAccess.getGREATEQUALAccess().getGreateEqualGreaterKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGREATEQUALRule());
					}
					addWithLastConsumed($current, "greateEqual", lv_greateEqual_0_0, "greater");
				}
			)
		)
		(
			(
				lv_greateEqual_1_0='or'
				{
					newLeafNode(lv_greateEqual_1_0, grammarAccess.getGREATEQUALAccess().getGreateEqualOrKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGREATEQUALRule());
					}
					addWithLastConsumed($current, "greateEqual", lv_greateEqual_1_0, "or");
				}
			)
		)
		(
			(
				lv_greateEqual_2_0='equal'
				{
					newLeafNode(lv_greateEqual_2_0, grammarAccess.getGREATEQUALAccess().getGreateEqualEqualKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGREATEQUALRule());
					}
					addWithLastConsumed($current, "greateEqual", lv_greateEqual_2_0, "equal");
				}
			)
		)
		(
			(
				lv_greateEqual_3_0='to'
				{
					newLeafNode(lv_greateEqual_3_0, grammarAccess.getGREATEQUALAccess().getGreateEqualToKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGREATEQUALRule());
					}
					addWithLastConsumed($current, "greateEqual", lv_greateEqual_3_0, "to");
				}
			)
		)
	)
;

// Entry rule entryRuleLESSEQUAL
entryRuleLESSEQUAL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLESSEQUALRule()); }
	iv_ruleLESSEQUAL=ruleLESSEQUAL
	{ $current=$iv_ruleLESSEQUAL.current; }
	EOF;

// Rule LESSEQUAL
ruleLESSEQUAL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_lessEqual_0_0='less'
				{
					newLeafNode(lv_lessEqual_0_0, grammarAccess.getLESSEQUALAccess().getLessEqualLessKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLESSEQUALRule());
					}
					setWithLastConsumed($current, "lessEqual", lv_lessEqual_0_0, "less");
				}
			)
		)
		otherlv_1='or'
		{
			newLeafNode(otherlv_1, grammarAccess.getLESSEQUALAccess().getOrKeyword_1());
		}
		otherlv_2='equal'
		{
			newLeafNode(otherlv_2, grammarAccess.getLESSEQUALAccess().getEqualKeyword_2());
		}
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getLESSEQUALAccess().getToKeyword_3());
		}
	)
;

// Entry rule entryRuleNOTEQUAL
entryRuleNOTEQUAL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNOTEQUALRule()); }
	iv_ruleNOTEQUAL=ruleNOTEQUAL
	{ $current=$iv_ruleNOTEQUAL.current; }
	EOF;

// Rule NOTEQUAL
ruleNOTEQUAL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_notEqual_0_0='not'
				{
					newLeafNode(lv_notEqual_0_0, grammarAccess.getNOTEQUALAccess().getNotEqualNotKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNOTEQUALRule());
					}
					setWithLastConsumed($current, "notEqual", lv_notEqual_0_0, "not");
				}
			)
		)
		otherlv_1='equal'
		{
			newLeafNode(otherlv_1, grammarAccess.getNOTEQUALAccess().getEqualKeyword_1());
		}
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getNOTEQUALAccess().getToKeyword_2());
		}
	)
;

// Entry rule entryRuleGREATER
entryRuleGREATER returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGREATERRule()); }
	iv_ruleGREATER=ruleGREATER
	{ $current=$iv_ruleGREATER.current; }
	EOF;

// Rule GREATER
ruleGREATER returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_greater_0_0='greater'
				{
					newLeafNode(lv_greater_0_0, grammarAccess.getGREATERAccess().getGreaterGreaterKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGREATERRule());
					}
					setWithLastConsumed($current, "greater", lv_greater_0_0, "greater");
				}
			)
		)
		otherlv_1='than'
		{
			newLeafNode(otherlv_1, grammarAccess.getGREATERAccess().getThanKeyword_1());
		}
	)
;

// Entry rule entryRuleLESS
entryRuleLESS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLESSRule()); }
	iv_ruleLESS=ruleLESS
	{ $current=$iv_ruleLESS.current; }
	EOF;

// Rule LESS
ruleLESS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_less_0_0='less'
				{
					newLeafNode(lv_less_0_0, grammarAccess.getLESSAccess().getLessLessKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLESSRule());
					}
					addWithLastConsumed($current, "less", lv_less_0_0, "less");
				}
			)
		)
		(
			(
				lv_less_1_0='than'
				{
					newLeafNode(lv_less_1_0, grammarAccess.getLESSAccess().getLessThanKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLESSRule());
					}
					addWithLastConsumed($current, "less", lv_less_1_0, "than");
				}
			)
		)
	)
;

// Entry rule entryRuleEQUAL
entryRuleEQUAL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEQUALRule()); }
	iv_ruleEQUAL=ruleEQUAL
	{ $current=$iv_ruleEQUAL.current; }
	EOF;

// Rule EQUAL
ruleEQUAL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_equal_0_0='equal'
				{
					newLeafNode(lv_equal_0_0, grammarAccess.getEQUALAccess().getEqualEqualKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEQUALRule());
					}
					setWithLastConsumed($current, "equal", lv_equal_0_0, "equal");
				}
			)
		)
		otherlv_1='to'
		{
			newLeafNode(otherlv_1, grammarAccess.getEQUALAccess().getToKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
