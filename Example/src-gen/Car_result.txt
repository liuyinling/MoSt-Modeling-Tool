*** This is NuSMV 2.6.0 (compiled on Wed Oct 14 15:32:58 2015)
*** Enabled addons are: compass
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Please report bugs to <Please report bugs to <nusmv-users@fbk.eu>>

*** Copyright (c) 2010-2014, Fondazione Bruno Kessler

*** This version of NuSMV is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of NuSMV is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

-- specification AG ((state = autonomy & mode = economic) -> AF state != accelerate)  is true
-- specification AG ((state = autonomy & mode = economic) -> AF state != autonomy)  is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    state = parking
    mode = sportive
    doorIsOpen = FALSE
    stop = FALSE
    accSpeed = 1
    displaySpeed = FALSE
    speed = 0
  -> Input: 1.2 <-
    action = PowerUp
  -> State: 1.2 <-
    state = ignition
    doorIsOpen = TRUE
    accSpeed = 10
  -> Input: 1.3 <-
    action = Start
  -> State: 1.3 <-
    state = start
    doorIsOpen = FALSE
    displaySpeed = TRUE
  -> Input: 1.4 <-
    action = Acc
  -> State: 1.4 <-
    state = accelerate
  -> Input: 1.5 <-
  -> State: 1.5 <-
    speed = 10
  -> Input: 1.6 <-
  -> State: 1.6 <-
    speed = 20
  -> Input: 1.7 <-
  -> State: 1.7 <-
    speed = 30
  -> Input: 1.8 <-
  -> State: 1.8 <-
    speed = 40
  -> Input: 1.9 <-
    action = Auto
  -> State: 1.9 <-
    state = autonomy
    speed = 50
  -> Input: 1.10 <-
    action = DeAC
  -- Loop starts here
  -> State: 1.10 <-
    mode = economic
  -> Input: 1.11 <-
    action = Ac
  -> State: 1.11 <-
    mode = sportive
    accSpeed = 5
  -> Input: 1.12 <-
    action = Acc
  -> State: 1.12 <-
    accSpeed = 10
    displaySpeed = FALSE
  -> Input: 1.13 <-
    action = DeAC
  -> State: 1.13 <-
    mode = economic
    displaySpeed = TRUE
-- specification AG ((state = autonomy & mode = economic) -> AF state = autonomy)  is true
-- specification EF state = parking  is true
-- specification EF state = start  is true
-- specification EF state = autonomy  is true
-- specification EF state = accelerate  is true
-- specification EF state = ignition  is true
